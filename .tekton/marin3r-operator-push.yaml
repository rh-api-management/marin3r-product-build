apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/rh-api-management/marin3r-product-build?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    build.appstudio.openshift.io/build-nudge-files: "bundle-hack/update_bundle.sh"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    # when adding filter for directory use "directory/***".pathChanged()
    # when adding filter for git submodule use "submodule".pathChanged()
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch == "main" &&
      (".tekton/multi-arch-build-pipeline.yaml".pathChanged() ||
      ".tekton/marin3r-operator-pull-request.yaml".pathChanged() ||
      ".tekton/marin3r-operator-push.yaml".pathChanged() ||
      "Containerfile.marin3r-operator".pathChanged() ||
      "marin3r".pathChanged())
#      "Dockerfile".pathChanged() ||
#      "apis".pathChanged()) ||
#      "cmd".pathChanged()) ||
#      "config".pathChanged()) ||
#      "controllers".pathChanged()) ||
#      "docs".pathChanged()) ||
#      "examples".pathChanged()) ||
#      "examples".pathChanged()) ||
#      "generators".pathChanged()) ||
#      "pkg".pathChanged()) ||
#      "test".pathChanged())
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: marin3r
    appstudio.openshift.io/component: marin3r-operator
    pipelines.appstudio.openshift.io/type: build
  name: marin3r-operator-on-push
  namespace: 3scale-prod-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/3scale-prod-tenant/marin3r-operator:{{revision}}
  - name: dockerfile
    value: Containerfile.marin3r-operator
  - name: path-context
    value: .
  - name: build-platforms
    value:
      - localhost
      - linux/arm64
      - linux/ppc64le
      - linux/s390x
#    - name: prefetch-input
#      value: '{"type": "gomod", "path": "."}'
#    - name: hermetic
#      value: "true"
  pipelineRef:
    name: multi-arch-build-pipeline
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'