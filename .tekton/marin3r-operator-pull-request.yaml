apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/rh-api-management/marin3r-product-build?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "main" && (".tekton/multi-arch-build-pipeline.yaml".pathChanged() || ".tekton/marin3r-operator-pull-request.yaml".pathChanged()
      || ".tekton/marin3r-operator-push.yaml".pathChanged() || "Containerfile.marin3r-operator".pathChanged()
      || "marin3r".pathChanged())
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: marin3r
    appstudio.openshift.io/component: marin3r-operator
    pipelines.appstudio.openshift.io/type: build
  name: marin3r-operator-on-pull-request
  namespace: 3scale-prod-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/3scale-prod-tenant/marin3r-operator:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: Containerfile.marin3r-operator
  - name: path-context
    value: .
  - name: build-platforms
    value:
    - localhost
    - linux/arm64
  - name: prefetch-input
    value: '{"type": "gomod", "path": "marin3r/"}'
  - name: hermetic
    value: "true"
  pipelineRef:
    name: build-pipeline
  taskRunTemplate:
    serviceAccountName: build-pipeline-marin3r-operator
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
