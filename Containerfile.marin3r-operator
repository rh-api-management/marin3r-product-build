# Based on ./gatekeeper-operator/Dockerfile
# Build the manager binary
FROM mirror.gcr.io/library/golang:1.24 as builder
USER 0
COPY drift-detection/detector.sh /detector.sh
# Check to see if we need to react to any uptream changes
COPY drift-cache /drift-cache
WORKDIR /tmp
COPY marin3r/Dockerfile .
RUN /detector.sh ./Dockerfile /drift-cache/marin3r-operator/Dockerfile

# TODO: cleanup if not needed
#ENV LDFLAGS="-X ${VERSION_PKG}.gitVersion=v3.15.1-7 \
#             -X ${VERSION_PKG}.gitCommit=59587323ce32580b4dffba0a09b1ca22109925db \
#             -X ${VERSION_PKG}.gitTreeState=clean \
#             -X ${VERSION_PKG}.buildDate="

ENV LDFLAGS="-X ${VERSION_PKG}.buildDate="
ENV BINARY_NAME="manager"

WORKDIR /workspace
# Copy the Go Modules manifests
COPY marin3r/go.mod go.mod
COPY marin3r/go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
# Copy the go source
COPY marin3r/api/ api/
COPY marin3r/cmd/ cmd/
COPY marin3r/internal/ internal/
COPY marin3r/vendor/ vendor/
COPY marin3r/LICENSE licenses/

# Build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=$(go env GOARCH) go build -a -ldflags "${LDFLAGS}$(date -u +'%Y-%m-%dT%H:%M:%SZ')" -o ${BINARY_NAME} cmd/main.go

FROM registry.access.redhat.com/ubi9/ubi-minimal:latest

LABEL com.redhat.component="marin3r-operator-container" \
   name="3scale-mas/marin3r-operator" \
   version="alpha"\
   summary="Lighweight, CRD based Envoy control plane for Kubernetes" \
   description="Lighweight, CRD based Envoy control plane for Kubernetes" \
   io.k8s.display-name="MARIN3R" \
   io.openshift.expose-services="" \
   io.openshift.tags="3scale, 3scale-amp, api, rhoam" \
   maintainer="rvazquez@redhat.com"

ENV OPERATOR_BINARY_NAME="manager" \
  USER_UID=65532 \
  USER_NAME=marin3r

USER root

# install operator binary
COPY --from=builder /workspace/${OPERATOR_BINARY_NAME} /
RUN chown ${USER_UID} /${OPERATOR_BINARY_NAME}

COPY --from=builder /workspace/licenses /licenses

ENTRYPOINT ["/manager"]

USER ${USER_UID}